{"version":3,"sources":["logo.svg","loaders/spinner.js","services/common.service.js","components/dashboard.component.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","useState","show","Modal","centered","Header","Title","Body","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","axios","DashboardPage","showLoader","setshowLoader","tableList","setTableList","useEffect","service","then","res","data","className","Table","striped","bordered","hover","responsive","scope","map","user","title","body","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,6DC2BAA,MAvBf,WAAmB,IAAD,EACYC,oBAAS,GADrB,mBACLC,EADK,KAEZ,OAFY,KAGR,eAACC,EAAA,EAAD,CAAOD,KAAMA,EAAME,UAAQ,EAA3B,UACE,cAACD,EAAA,EAAME,OAAP,UACE,cAACF,EAAA,EAAMG,MAAP,4BAEF,cAACH,EAAA,EAAMI,KAAP,UACM,eAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,UAAQ,EAAlC,UACM,cAACC,EAAA,EAAD,CACMC,GAAG,OACHC,UAAU,OACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SANxB,sBCTH,EACF,kBACTC,IAAM,CACF,OAAS,MACT,IAAM,gDCuCCC,MAzCf,WAA0B,IAAD,EACiBjB,oBAAS,GAD1B,mBACZkB,EADY,KACAC,EADA,OAEenB,mBAAS,IAFxB,mBAEZoB,EAFY,KAEDC,EAFC,KAUnB,OAPAC,qBAAU,WACJC,IACCC,MAAK,SAACC,GACDJ,EAAaI,EAAIC,MACjBP,GAAc,SAIpB,qBAAKQ,UAAU,kBAAf,SAEYT,EACM,cAAC,EAAD,IACX,eAACU,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACK,gCACM,+BACM,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBAGZ,gCAESb,EAAUc,KAAI,SAACC,GAAD,OACX,+BACM,6BAAKA,EAAKC,QACV,6BAAKD,EAAKE,qBCrBrCC,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCMSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.632e1d6f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\nfunction Loader() {\r\n      const [show, setShow] = useState(true);\r\n      return (\r\n          <Modal show={show} centered>\r\n            <Modal.Header>\r\n              <Modal.Title>Please Wait</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                  <Button variant=\"primary\" disabled>\r\n                        <Spinner\r\n                              as=\"span\"\r\n                              animation=\"grow\"\r\n                              size=\"sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                        />\r\n                        Loading...\r\n                  </Button>\r\n            </Modal.Body>\r\n          </Modal>\r\n      );\r\n}\r\n\r\nexport default Loader;\r\n    ","\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    getData: () =>\r\n    axios({\r\n        'method':'GET',\r\n        'url':'https://jsonplaceholder.typicode.com/posts'\r\n    })\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport axios from 'axios';\r\nimport Loader from '../loaders/spinner';\r\nimport service from '../services/common.service';\r\nfunction DashboardPage() {\r\n      const [showLoader, setshowLoader] = useState(true);\r\n      const [tableList, setTableList] = useState([]);\r\n      useEffect(() => {\r\n            service.getData()\r\n            .then((res)=>{\r\n                  setTableList(res.data);\r\n                  setshowLoader(false);\r\n            })\r\n      });\r\n      return(\r\n            <div className='conatiner-fluid'>\r\n                  {\r\n                        showLoader ? \r\n                              <Loader/> :   \r\n                   <Table striped bordered hover responsive >\r\n                        <thead>\r\n                              <tr>\r\n                                    <th scope=\"col\">TITLE</th>\r\n                                    <th scope=\"col\">BODY</th>\r\n                              </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              {\r\n                                 tableList.map((user) => (\r\n                                    <tr>\r\n                                          <td>{user.title}</td>\r\n                                          <td>{user.body}</td>\r\n                                    </tr>\r\n                                  ))\r\n                             }\r\n                        </tbody>\r\n                        \r\n                   </Table> \r\n                  \r\n                  }\r\n  \r\n            </div>\r\n      )\r\n}\r\n\r\nexport default DashboardPage;","import logo from './logo.svg';\nimport './App.css';\nimport DashboardPage from './components/dashboard.component'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DashboardPage></DashboardPage>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}